// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  services  Service[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  rate         Float
  category     String?
  availability String
  imageUrl     String?
  approved     ApprovalStatus @default(PENDING)
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  bookings     Booking[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Booking {
  id        Int           @id @default(autoincrement())
  date      String
  time      String
  notes     String?
  duration  Int?          @default(1)
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  service   Service       @relation(fields: [serviceId], references: [id])
  serviceId Int
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BookingStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
  IN_PROGRESS
  FAILED
  REFUNDED
  ON_HOLD
}

enum Role {
  ADMIN
  FREELANCER
  USER
}
